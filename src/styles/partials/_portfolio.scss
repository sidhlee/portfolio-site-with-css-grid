.portfolio {
  text-align: center;
  background: $light-gray;
  padding: 5em 0;
  h1 {
    text-shadow: 1px 1px rgba(0, 0, 0, 0.2);
  }
}

.portfolio-items {
  display: flex;
  flex-wrap: wrap;
  // set max-width so that images don't grow too large
  // especially when filling up the last row.
  @include container($max-width: 75em);
}

.portfolio-item {
  position: relative;
  overflow: hidden; // just in case
  flex: 1 1 50%;

  &.featured {
    order: 0;
    flex-basis: 100%;
  }

  // It's always better to aim for higher specificity
  // to prevent the rule from spilling over
  img:first-child {
    // removes little space at the bottom of images
    // because img is inline-bottom by default.
    display: block;
    width: 100%; // fill up 100% of container
  }

  figcaption {
    // make text lay on top of image.
    position: absolute;
    top: 100%; // hide on normal state
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(
      $accent,
      0.75
    ); // increased from 0.5 to make text more readable
    color: $white;
    text-align: left;
    display: flex;
    flex-direction: column;
    padding: 2em;
    transition: top 250ms ease-in-out;
  }

  /* :hover on parent! */
  &:hover figcaption,
  &:focus figcaption {
    // when hovered | focused | touched(mobile)
    top: 0;
  }
}

.portfolio-title {
  color: $white;
  font-size: 10vw; // will grow with vw
  /* margin-bottom: auto; inside flex box pushes all the following content to the bottom */
  margin-bottom: auto;
}

/* Hide description by default */
.portfolio-desc {
  display: none;
}

/* when parent container has .featured class, make title bigger & show description */
.featured {
  .portfolio-title {
    font-size: 20vw;
  }

  .portfolio-desc {
    display: block;
  }
}

.portfolio-link {
  color: $white;
  font-size: 1.1rem; // little bigger
  font-size: $fw-b;
  text-decoration: none;
  /* spans whole row because parent container is flexed in column direction
   and flex-box by default, makes its children fully stretched sideways along its axis) */
  border-bottom: 3px solid $white;
  /* Solution */
  align-self: flex-start;
  // link icon
  &::after {
    /* when we import svg as file (as opposed to inline svg) 
    we don't have many option to style them with css. 
    So make sure you export them styled as needed */
    content: url("/images/arrow-white.svg");
    display: inline-block; // this will put icon next to link AND extend border-bottom;
    /* need both height & width to show svg element */
    height: 0.8em;
    width: 0.8em;
    margin-left: 0.5em;
  }
}

/* After we've done all the fallbacks */
@supports (display: grid) {
  .portfolio-items {
    display: grid;
    grid-template-columns: repeat(2, 1fr); // creates two cols

    @include mq {
      grid-template-columns: repeat(
        4,
        1fr
      ); // have 4 cols instead of 2 on wider sc
      .portfolio-title {
        /* bigger than 2.5rem and smaller than 4rem */
        font-size: min(max(5vw, 2.5rem), 4rem);
      }
      .portfolio-item.featured .portfolio-title {
        font-size: min(max(10vw, 5rem), 10rem);
      }
    }
  }

  /* When with .featured class, move it to the top row
    and make it span that whole row */
  .portfolio-item.featured {
    grid-column: 1 / span 2;
    grid-row: 1 / span 2;
  }
}

.portfolio-modal {
  position: fixed;
  z-index: 100; // should be larger than menu-toggle
  // to be able to see the content in the background
  top: 2em;
  bottom: 2em;
  left: 2em;
  right: 2em;
  background: white;

  /* Nice trick to create backdrop without div */
  box-shadow: 0 0 0 3em rgba(black, 0.6); // using spread-radius(expands shadow)
  overflow-y: scroll; // create scroll-bar for modal. can turn outer scroll bar off with JS
  overflow-x: hidden;

  display: none; // close modal

  &.is-open {
    display: block;
  }
}

.modal-close {
  background: white;
  position: fixed;
  left: 1em;
  top: 1em;
  border: 0; // === none
  width: 3em;
  height: 3em;
  border-radius: 50%;
  box-shadow: 0 0 5px rgba(black, 0.5);
  padding: 5px 0px 0px 2px; // fine tuning svg position within button
  cursor: pointer;
}

.portfolio-header {
  text-align: left;
  padding: 5em 0;
  margin-bottom: 2em; // space before main content
  background-size: cover;
  background-position: center;
  .portfolio-title {
    font-size: min(
      max(5vw, 2.5rem),
      4rem
    ); // we set it to be 20vw when .featured added
  }
}

.portfolio-item:nth-of-type(1) .portfolio-header {
  background-image: url("/images/portfolio-01.jpg");
}

.portfolio-item:nth-of-type(2) .portfolio-header {
  background-image: url("/images/portfolio-02.jpg");
}

.portfolio-title-box {
  background: rgba($accent, 0.75); // create bg inside title-box
  padding: 3em;
  color: white;
  width: 70%;

  .portfolio-title {
    /* box width is decided by its content. 
    makes its ::after line have the same width as the title text */
    display: inline-block;
    &::after {
      content: "";
      display: block;
      height: 1px;
      margin: 0.5em 0;
      background: white;
      width: 100%; // line will be as wide as title text width
    }
  }
}

.portfolio-subtitle {
  font-size: 1rem; // little bigger
}

.portfolio-content {
  text-align: left;
  width: 85%; // give some space on the side
  margin: 0 auto;
  padding-bottom: 2em; // give some padding at the bottom!
}

.portfolio-full-width {
  // BREAK IMAGE OUT OF CONTAINER TO SPAN 100VW!
  width: 100vw; // still starts at the left margin of the container
  max-width: initial; // makes it overflow out of the container
  /* 
  create x-margin 50% of container, then pull back 50 % of vw = make it start at 0 vw .
  But this creates scroll-x. so we added overflow-x: hidden inside .portfolio-modal
  */
  margin: 2em calc(50% - 50vw);
  height: 20vh; // make it landscape-ish, but squashes image
  object-fit: cover; // bgz for image
}

/* 
We used this mixin to apply other responsive rules (e.g. font-size)
It's good to apply same breakpoint for things to change.
*/
@include mq {
  .portfolio-pull-left {
    width: 65%;
    float: left;
    margin-right: 2em;
  }

  .portfolio-pull-right {
    width: 65%;
    float: right;
    margin-left: 2em;
  }
}

@keyframes modalIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes modalOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
